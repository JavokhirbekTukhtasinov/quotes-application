{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.jsx"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuoteHandler","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCwD/BC,EArDG,SAACL,GAClB,MAAsCM,oBAAS,GAA/C,mBAAQC,EAAR,KAAoBC,EAApB,KACMC,EAAiBC,mBACjBC,EAAeD,mBAiBrB,OACC,eAAC,WAAD,WACC,cAAC,IAAD,CACCE,KAAML,EACNM,QAAS,SAACC,GAAD,MAAc,oFAExB,cAAC,EAAD,UACC,uBAAMC,QAXgB,WACxBP,GAAc,IAUqBP,UAAWC,IAAQc,KAAMC,SAtB7D,SAA2BC,GAC1BA,EAAMC,iBAEN,IAAMC,EAAgBX,EAAeY,QAAQC,MACvCC,EAAcZ,EAAaU,QAAQC,MAIzCtB,EAAMwB,kBAAkB,CAAEC,OAAQL,EAAeM,KAAMH,KAcrD,UACEvB,EAAM2B,WACN,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACC,cAACC,EAAA,EAAD,MAIF,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACC,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKzB,OAErC,sBAAKR,UAAWC,IAAQ4B,QAAxB,UACC,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKvB,OAEnC,qBAAKV,UAAWC,IAAQkC,QAAxB,SACC,wBAAQC,QAAS,kBAAM7B,GAAc,IAAQP,UAAU,MAAvD,kC,gBCtBSqC,UAtBf,WACC,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,EAAUC,cAahB,OAXAC,qBACC,WACgB,cAAXH,GACHC,EAAQG,KAAK,aAGf,CAAEJ,EAAQC,IAMV,8BACC,cAAC,EAAD,CAAWhB,UAAsB,YAAXe,EAAsBlB,kBALtB,SAACuB,GACxBN,EAAYM","file":"static/js/6.62fb523c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__33sxJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3NYfc\",\"loading\":\"QuoteForm_loading__2jtL6\",\"control\":\"QuoteForm_control__2LQjh\",\"actions\":\"QuoteForm_actions__2FgxL\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n\tconst [ isEntering, setIsEntering ] = useState(false);\n\tconst authorInputRef = useRef();\n\tconst textInputRef = useRef();\n\n\tfunction submitFormHandler(event) {\n\t\tevent.preventDefault();\n\n\t\tconst enteredAuthor = authorInputRef.current.value;\n\t\tconst enteredText = textInputRef.current.value;\n\n\t\t// optional: Could validate here\n\n\t\tprops.onAddQuoteHandler({ author: enteredAuthor, text: enteredText });\n\t}\n\n\tconst formFocusHandler = () => {\n\t\tsetIsEntering(true);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Prompt\n\t\t\t\twhen={isEntering}\n\t\t\t\tmessage={(location) => 'Are you sure You want to leave? All your entered information will disappear!!!'}\n\t\t\t/>\n\t\t\t<Card>\n\t\t\t\t<form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n\t\t\t\t\t{props.isLoading && (\n\t\t\t\t\t\t<div className={classes.loading}>\n\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t\t<label htmlFor=\"author\">Author</label>\n\t\t\t\t\t\t<input type=\"text\" id=\"author\" ref={authorInputRef} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t\t<label htmlFor=\"text\">Text</label>\n\t\t\t\t\t\t<textarea id=\"text\" rows=\"5\" ref={textInputRef} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t\t<button onClick={() => setIsEntering(false)} className=\"btn\">\n\t\t\t\t\t\t\tAdd Quote\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\nfunction NewQuote() {\r\n\tconst { sendRequest, status } = useHttp(addQuote);\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (status === 'completed') {\r\n\t\t\t\thistory.push('/quotes');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ status, history ]\r\n\t);\r\n\tconst addQuoteHandler = (quoteData) => {\r\n\t\tsendRequest(quoteData);\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<QuoteForm isLoading={status === 'pending'} onAddQuoteHandler={addQuoteHandler} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default NewQuote;\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/Quotes.jsx"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascanding","history","useHistory","location","useLocation","isAscanding","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","NoQuotesFound","noquotes","Quotes","useHttp","getAllQuotes","sendRequest","status","loadedQuote","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wGCiBdC,EAhBG,SAACC,GAClB,OACC,qBAAIC,UAAWC,IAAQC,KAAvB,UACC,mCACC,qCACC,4BAAIH,EAAMI,SAEX,qCAAaJ,EAAMK,YAEpB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,kBAAaN,EAAMO,IAA3C,iC,iBC+BYC,EA3BG,SAACR,GAClB,IAXmBS,EAAQC,EAWrBC,EAAUC,cACVC,EAAWC,cAEXC,EAA0C,QAD5B,IAAIC,gBAAgBH,EAASI,QACjBC,IAAI,QAC9BC,GAfaV,EAeaT,EAAMS,OAfXC,EAemBK,EAdvCN,EAAOW,MAAK,SAACC,EAAQC,GAC3B,OAAIZ,EACIW,EAAOd,GAAKe,EAAS,GAAK,EAE1BD,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAkBtC,OACC,eAAC,WAAD,WACC,qBAAKN,UAAWC,IAAQqB,QAAxB,SACC,yBAAQC,QAVkB,WAC5Bb,EAAQc,KAAK,CACZC,SAAWb,EAASa,SACpBT,OAAM,gBAAcF,EAAc,OAAS,UAO1C,qBAAgDA,EAAc,aAAe,iBAE9E,oBAAId,UAAWC,IAAQyB,KAAvB,SACER,EAAaS,KAAI,SAACC,GAAD,OACjB,cAAC,EAAD,CAA0BtB,GAAIsB,EAAMtB,GAAIF,OAAQwB,EAAMxB,OAAQD,KAAMyB,EAAMzB,MAA1DyB,EAAMtB,a,yBCtBZuB,EAXO,WACrB,OACC,sBAAK7B,UAAWC,IAAQ6B,SAAxB,UACC,iDACA,cAAC,IAAD,CAAM9B,UAAU,MAAMK,GAAG,aAAzB,6BCoCY0B,UAnCf,WACiBpB,cAAhB,IACA,EAA0DqB,YAAQC,KAAc,GAAxEC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAcC,EAAnC,EAA6BC,KAAmBC,EAAhD,EAAgDA,MAOhD,OANAC,qBACC,WACCL,MAED,CAAEA,IAEY,YAAXC,EAEF,qBAAKnC,UAAU,WAAf,SACC,cAACwC,EAAA,EAAD,MAKY,UAAXL,EACI,qBAAKnC,UAAU,mBAAf,SAAmCsC,IAE5B,cAAXH,GAAiD,IAAvBC,EAAYK,OAExC,qBAAKzC,UAAU,mBAAf,SACC,cAAC,EAAD,MAMF,8BACC,cAAC,EAAD,CAAWQ,OAAQ4B","file":"static/js/5.3727c9b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2Ibsf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1habc\",\"sorting\":\"QuoteList_sorting__R50z_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__2Kssl\"};","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom';\nconst QuoteItem = (props) => {\n\treturn (\n\t\t<li className={classes.item}>\n\t\t\t<figure>\n\t\t\t\t<blockquote>\n\t\t\t\t\t<p>{props.text}</p>\n\t\t\t\t</blockquote>\n\t\t\t\t<figcaption>{props.author}</figcaption>\n\t\t\t</figure>\n\t\t\t<Link className=\"btn\" to={`/quotes/${props.id}`}>\n\t\t\t\tView Fullscreen\n\t\t\t</Link>\n\t\t</li>\n\t);\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascanding) => {\n\treturn quotes.sort((quoteA, quoteB) => {\n\t\tif (ascanding) {\n\t\t\treturn quoteA.id < quoteB ? 1 : -1;\n\t\t} else {\n\t\t\treturn quoteA.id > quoteB.id ? 1 : -1;\n\t\t}\n\t});\n};\n\nconst QuoteList = (props) => {\n\tconst history = useHistory();\n\tconst location = useLocation();\n\tconst queryResult = new URLSearchParams(location.search);\n\tconst isAscanding = queryResult.get('sort') === 'asc';\n\tconst sortedQuotes = sortQuotes(props.quotes, isAscanding);\n\tconst changeSortingHandler = () => {\n\t\thistory.push({\n\t\t\tpathname : location.pathname,\n\t\t\tsearch   : `?sort=${isAscanding ? 'desc' : 'asc'}`\n\t\t});\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className={classes.sorting}>\n\t\t\t\t<button onClick={changeSortingHandler}>Sorting {isAscanding ? 'Descending' : 'Ascending'}</button>\n\t\t\t</div>\n\t\t\t<ul className={classes.list}>\n\t\t\t\t{sortedQuotes.map((quote) => (\n\t\t\t\t\t<QuoteItem key={quote.id} id={quote.id} author={quote.author} text={quote.text} />\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</Fragment>\n\t);\n};\n\nexport default QuoteList;\n","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\nconst NoQuotesFound = () => {\n\treturn (\n\t\t<div className={classes.noquotes}>\n\t\t\t<p>No quotes found!</p>\n\t\t\t<Link className=\"btn\" to=\"/new-quote\">\n\t\t\t\tAdd a Quote\n\t\t\t</Link>\n\t\t</div>\n\t);\n};\n\nexport default NoQuotesFound;\n","import React, { useEffect } from 'react';\r\nimport { getAllQuotes } from '../lib/api';\r\nimport useHttp from '../hooks/use-http';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuote from '../components/quotes/NoQuotesFound';\r\nimport { useHistory } from 'react-router-dom';\r\nfunction Quotes() {\r\n\tconst history = useHistory();\r\n\tconst { sendRequest, status, data: loadedQuote, error } = useHttp(getAllQuotes, true);\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tsendRequest();\r\n\t\t},\r\n\t\t[ sendRequest ]\r\n\t);\r\n\tif (status === 'pending') {\r\n\t\treturn (\r\n\t\t\t<div className=\"centered\">\r\n\t\t\t\t<LoadingSpinner />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (status === 'error') {\r\n\t\treturn <dvi className=\"centered focused\">{error}</dvi>;\r\n\t}\r\n\tif (status === 'completed' && loadedQuote.length === 0) {\r\n\t\treturn (\r\n\t\t\t<div className=\"centered focused\">\r\n\t\t\t\t<NoQuote />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<QuoteList quotes={loadedQuote} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Quotes;\r\n"],"sourceRoot":""}
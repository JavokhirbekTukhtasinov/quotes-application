{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.jsx"],"names":["module","exports","NewCommentForm","props","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComponent","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","text","quoteId","className","classes","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","length","addedcommentHandler","useCallback","onClick","onAddedComment","HighlightedQuote","quote","author","DUMMY_QUOTES","QuoteDetail","params","match","useRouteMatch","find","getSingleQuote","loadedQuote","path","exact","to"],"mappings":"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","file":"static/js/4.72f48ee0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3Z2HT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__LsY8z\",\"loading\":\"NewCommentForm_loading__3fB0J\",\"control\":\"NewCommentForm_control__2XH2u\",\"actions\":\"NewCommentForm_actions__2xg0X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__3GZ8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__31SjF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3dOZi\"};","import { useEffect, useRef } from 'react';\nimport { addComment } from '../../lib/api';\nimport useHttp from '../../hooks/use-http';\nimport classes from './NewCommentForm.module.css';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst NewCommentForm = (props) => {\n\tconst commentTextRef = useRef();\n\tconst { sendRequest, status, error } = useHttp(addComment);\n\tconst { onAddedComponent } = props;\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (status === 'completed' && !error) {\n\t\t\t\tonAddedComponent();\n\t\t\t}\n\t\t},\n\t\t[ status, error, onAddedComponent ]\n\t);\n\tconst submitFormHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tconst enteredText = commentTextRef.current.value;\n\t\t// optional: Could validate here\n\n\t\t// send comment to server\n\t\tsendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n\t};\n\n\treturn (\n\t\t<form className={classes.form} onSubmit={submitFormHandler}>\n\t\t\t{status === 'pending' && (\n\t\t\t\t<div className=\"centered\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className={classes.control} onSubmit={submitFormHandler}>\n\t\t\t\t<label htmlFor=\"comment\">Your Comment</label>\n\t\t\t\t<textarea id=\"comment\" rows=\"5\" ref={commentTextRef} />\n\t\t\t</div>\n\t\t\t<div className={classes.actions}>\n\t\t\t\t<button className=\"btn\">Add Comment</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport CommentList from './CommentsList';\nconst Comments = () => {\n\tconst [ isAddingComment, setIsAddingComment ] = useState(false);\n\tconst quoteId = useParams();\n\n\tconst { sendRequest, status, data: loadedComments, error } = useHttp(getAllComments);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsendRequest(quoteId);\n\t\t},\n\t\t[ sendRequest, quoteId ]\n\t);\n\n\tconst startAddCommentHandler = () => {\n\t\tsetIsAddingComment(true);\n\t};\n\tlet comment;\n\tif (status === 'pending') {\n\t\tcomment = (\n\t\t\t<div className=\"centered\">\n\t\t\t\t<LoadingSpinner />\n\t\t\t</div>\n\t\t);\n\t}\n\tif (status === 'completed' && loadedComments && loadedComments.length > 0) {\n\t\tcomment = (\n\t\t\t<div className=\"centered\">\n\t\t\t\t<CommentList comments={loadedComments} />\n\t\t\t</div>\n\t\t);\n\t}\n\tif (status === 'completed' && (!loadedComments || loadedComments.length <= 0)) {\n\t\tcomment = (\n\t\t\t<div className=\"centered\">\n\t\t\t\t<h2>No comment entered yet</h2>\n\t\t\t</div>\n\t\t);\n\t}\n\tconst addedcommentHandler = useCallback(\n\t\t() => {\n\t\t\tsendRequest(quoteId);\n\t\t},\n\t\t[ sendRequest, quoteId ]\n\t);\n\treturn (\n\t\t<section className={classes.comments}>\n\t\t\t<h2>User Comments</h2>\n\t\t\t{!isAddingComment && (\n\t\t\t\t<button className=\"btn\" onClick={startAddCommentHandler}>\n\t\t\t\t\tAdd a Comment\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t{isAddingComment && <NewCommentForm quoteId={quoteId} onAddedComment={addedcommentHandler} />}\n\t\t\t{comment}\n\t\t</section>\n\t);\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useEffect } from 'react';\r\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\r\nimport Commments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\n\r\nconst DUMMY_QUOTES = [\r\n\t{\r\n\t\tid     : 'p1',\r\n\t\tauthor : 'Javohir',\r\n\t\ttext   : 'learning react is fun!'\r\n\t},\r\n\t{\r\n\t\tid     : 'p2',\r\n\t\tauthor : 'TJ_dev',\r\n\t\ttext   : 'learning react is not fun anymore!'\r\n\t}\r\n];\r\n\r\nfunction QuoteDetail() {\r\n\tconst params = useParams();\r\n\tconst match = useRouteMatch();\r\n\tconst quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\r\n\tconst { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true);\r\n\tconst { quoteId } = params;\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tsendRequest(quoteId);\r\n\t\t},\r\n\t\t[ sendRequest, quoteId ]\r\n\t);\r\n\tif (status === 'pending') {\r\n\t\treturn (\r\n\t\t\t<div className=\"centered\">\r\n\t\t\t\t<LoadingSpinner />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\tif (error) {\r\n\t\treturn <p className=\"centered\">{error}</p>;\r\n\t}\r\n\tif (!loadedQuote.text) {\r\n\t\treturn <p>Not quotes found</p>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n\t\t\t<div className=\"centered\">\r\n\t\t\t\t<Route path={match.path} exact>\r\n\t\t\t\t\t<Link className=\"btn--flat\" to={`/quotes/${params.quoteId}/comments`}>\r\n\t\t\t\t\t\tLoad comment\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Route>\r\n\t\t\t</div>\r\n\t\t\t<Route path={`${match.path}/comments`}>\r\n\t\t\t\t<Commments />\r\n\t\t\t</Route>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default QuoteDetail;\r\n"],"sourceRoot":""}